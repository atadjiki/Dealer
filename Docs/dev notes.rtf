{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Prototype:\
\
starting fresh:\
\
- event managers\
	- carries all of the delegates that managers and objects can use \
	- other scripts can register/unregister to these delegates\
	- when delegates are invoked, event manager sends all interested parties a ping\
\
- input handler \
	- handle keyboard, mouse etc\
	- be able to discern between game modes\
\
- ui handler\
	- UI is no longer persistent\
	- if we need UI we spawn a prefab, then delete when we are done\
	- no more having UI always in the scene\
\
- separate scenes into:\
\
	- manager scene\
	- UI scene\
	- 3d assets\
\
- the manager scene is always loaded, then everything else is loaded and unloaded\
\
- need an easy format to save the game state in \
\
float:\
\
- load static managers\
- check what state we are in \
- load any necessary levels\
- load in assets for levels like characters\
- load in any necessary UI for this state }